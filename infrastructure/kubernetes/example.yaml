apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: webserver
  labels:
    app: webserver
spec:
  selector:
    matchLabels:
      app: webserver
  serviceName: webserver
  replicas: 4
  template:
    metadata:
      name: webserver
      labels:
        app: webserver
    spec:
     initContainers:
        - name: init-php
          image: your-php-image (PLEASE REPLACE THIS)
          env:
          - name: DATABASE_HOST_RW
            valueFrom:
              configMapKeyRef:
                name: website-config
                key: DATABASE_HOST_RW

          volumeMounts:
          - name: code
            mountPath: /code

          command:
          - bash
          - "-c"
          - |
            # Copy the code to the shared volume, this will be mounted later into both of nginx and php
            cp -r /var/www/html/you_web_site/* /code/
            cd /code
            composer install
            php bin/console assets:install
            php bin/console cache:clear --env=dev
            php bin/console cache:clear --env=prod
# I use this image to build my npm packages and webpack assets
        - name: node
          image: node:11
          volumeMounts:
          - name: code
            mountPath: /var/www/html/you_web_site/

          command:
          - bash
          - "-c"
          - |
            set -ex
            cd /var/www/html/you_web_site/
            npm install || echo "npm install did not work"
            ./node_modules/.bin/webpack --mode=production

      containers:
      - name: nginx
        image: you-nginx-image or offecial image (PLEASE REPLACE THIS)
        imagePullPolicy: Always # you might want to change this
        volumeMounts:
        - name: code
          mountPath: /var/www/html/you_web_site/

      - name: php
        image: your-php-image
        imagePullPolicy: Always # again
        volumeMounts:
        - name: code
          mountPath: /var/www/html/you_web_site/

        env:
        - name: FS_KEY
          valueFrom:
            secretKeyRef:
              name: your-secret-name
              key: key

        - name: FS_SECRET
          valueFrom:
            secretKeyRef:
              name:  your-secret-name
              key: secret
         # That's another var I use to force my app to use local file system when it's set to false.
        - name: FS_USE_REMOTE
          value: "true"

      # if your images are stored in private repo
      imagePullSecrets:
      - name: your-image-pull-secret

      volumes:
      - name: webserver-config-map
        configMap:
          name: webserver
# I use a persistent volume to store code, so I don't rebuild everything on every pod restart (like, node_modules). However, it's perfectly fine to use temp volume, it will just take a bit longer to start the container
  volumeClaimTemplates:
  - metadata:
      name: code
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 4Gi
      storageClassName: do-block-storage